两列布局;

1.前提： 当两列都是定宽的时候
	这时我们可以设置两列浮动后再设置两列具体宽度。 （参照两列布局-1）

2. 前提：一列定宽 一列自适应
	这时我们可以设置两列浮动，浮动脱离文档流所以必须设置宽度，因此自适应的盒子宽度是100%。因为第二列为100%的父级宽度，所以要向左移动，此时自适应盒子虽然回到容器中，但是覆盖住了定宽列的内容，我们利用定位的优先级高于浮动这个属性来设置定宽列，此时定宽列就可以显示了并且视觉上没有任何问题， 但是实际上被设置了定位的定宽列和自适应列已经不再一个面上了，此时定宽列更靠前所以覆盖住了自适应列，这时我们就利用padding 或者 margin来最后解决被覆盖住的部分。注意需要对自适应列设置一个border-box（参考两列布局-2）

3. 前提：一列定宽 一列自适应
	上面用到的是两列一起浮动，但是实际上我们可以只浮动定宽列，此时两个列不再一个面上而且由于定宽列更靠前所以覆盖住了自适应列，此时我们只需要用margin或者padding来解决被遮住的部分就可以了。 （参考两列布局-3）

4. 前提：一列定宽 一列自适应
	同样还是只浮动定宽列，由于浮动所以遮住了自适应列的一部分，除了使用margin和padding，此时我们使用overflow: hidden; 来解决就可以了。记住这个用法就行。（参考两列布局-5）

5. 前提：一列定宽 一列自适应
	上面讲了很多浮动的方法，不论是浮动两列还是浮动定宽列。这里除了浮动之外我们还可以用定位的方法来解决。首先我们这里在自定义列中不需要再设置宽度了因为这里使用的是定位而不是浮动。 还是选择定宽列来开启绝对定位，因为我们需要这个绝对定位是相对于他的容器的，所以要在容器中开启一个相对定位。因为定宽列开启了绝对定位所以脱离了文档流，导致了覆盖自适应列的内容，所以最后再用margin调整一下自适应列的位置即可。（参考两列布局-4）

6.前提：一列定宽 一列自适应
	最后一种方法，利用display: table以表格来表现;和displ:table-cell以表格单元格来表现; 首先我们在整个容器中给予一个display:table 然后给予两个列display: table-cell的属性，最后由于需要优化和更快的加载速度，我们需要在容器中给予一个table-layout: fixed;的属性

